{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saoir\\\\Downloads\\\\labMoviesApp-main\\\\labMoviesApp-main\\\\src\\\\pages\\\\favouriteMovieActorsPage.js\",\n    _this = this;\n\nimport React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateMovieActorsListPage\";\nimport { MovieActorContext } from \"../contexts/movieActorContext\";\nimport { useQueries } from \"react-query\";\nimport { getMovieActor } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner';\nimport RemoveFromFavourites from \"../components/cardIcons/removeFromMovieActorFavourites\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar FavouriteMovieActorsPage = function FavouriteMovieActorsPage() {\n  var _useContext = useContext(MovieActorContext),\n      actorsIds = _useContext.favourites; // Create an array of queries and run in parallel.\n\n\n  var favouriteMovieActorQueries = useQueries(actorsIds.map(function (actorsId) {\n    return {\n      queryKey: [\"actors\", {\n        id: actorsId\n      }],\n      queryFn: getMovieActor\n    };\n  })); // Check if any of the parallel queries is still loading.\n\n  var isLoading = favouriteMovieActorQueries.find(function (m) {\n    return m.isLoading === true;\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, _this);\n  }\n\n  var actors = favouriteMovieActorQueries.map(function (q) {\n    //     q.data.genre_ids = q.data.genres.map(g => g.id)\n    return q.data;\n  });\n\n  var toDo = function toDo() {\n    return true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageTemplate, {\n    title: \"Favourite Movie Actors\",\n    actors: actors,\n    action: function action(actors) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(RemoveFromFavourites, {\n          actors: actors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, _this);\n};\n\nexport default FavouriteMovieActorsPage; // import React from \"react\";\n// const favouriteMovieActorsPage = () => {\n//     return <h2>Favourite Movie Actors</h2>\n// }\n// export default favouriteMovieActorsPage;","map":{"version":3,"names":["React","useContext","PageTemplate","MovieActorContext","useQueries","getMovieActor","Spinner","RemoveFromFavourites","FavouriteMovieActorsPage","actorsIds","favourites","favouriteMovieActorQueries","map","actorsId","queryKey","id","queryFn","isLoading","find","m","actors","q","data","toDo"],"sources":["C:/Users/saoir/Downloads/labMoviesApp-main/labMoviesApp-main/src/pages/favouriteMovieActorsPage.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateMovieActorsListPage\";\nimport { MovieActorContext } from \"../contexts/movieActorContext\";\nimport { useQueries } from \"react-query\";\nimport { getMovieActor } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner';\nimport RemoveFromFavourites from \"../components/cardIcons/removeFromMovieActorFavourites\";\n\nconst FavouriteMovieActorsPage = () => {\n  const {favourites: actorsIds } = useContext(MovieActorContext);\n\n  // Create an array of queries and run in parallel.\n  const favouriteMovieActorQueries = useQueries(\n    actorsIds.map((actorsId) => {\n      return {\n        queryKey: [\"actors\", { id: actorsId }],\n        queryFn: getMovieActor,\n      };\n    })\n  );\n  // Check if any of the parallel queries is still loading.\n  const isLoading = favouriteMovieActorQueries.find((m) => m.isLoading === true);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n   const actors = favouriteMovieActorQueries.map((q) => {\n//     q.data.genre_ids = q.data.genres.map(g => g.id)\n     return q.data });\n\n  const toDo = () => true;\n\n  return (\n    <PageTemplate\n      title=\"Favourite Movie Actors\"\n      actors={actors}\n      action={(actors) => {\n        return (\n          <>\n            <RemoveFromFavourites actors={actors} />\n          </>\n        );\n      }}\n    />\n  );\n};\n\nexport default FavouriteMovieActorsPage;\n\n// import React from \"react\";\n\n// const favouriteMovieActorsPage = () => {\n//     return <h2>Favourite Movie Actors</h2>\n// }\n\n// export default favouriteMovieActorsPage;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,oBAAP,MAAiC,wDAAjC;;;;AAEA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;EACrC,kBAAiCP,UAAU,CAACE,iBAAD,CAA3C;EAAA,IAAmBM,SAAnB,eAAOC,UAAP,CADqC,CAGrC;;;EACA,IAAMC,0BAA0B,GAAGP,UAAU,CAC3CK,SAAS,CAACG,GAAV,CAAc,UAACC,QAAD,EAAc;IAC1B,OAAO;MACLC,QAAQ,EAAE,CAAC,QAAD,EAAW;QAAEC,EAAE,EAAEF;MAAN,CAAX,CADL;MAELG,OAAO,EAAEX;IAFJ,CAAP;EAID,CALD,CAD2C,CAA7C,CAJqC,CAYrC;;EACA,IAAMY,SAAS,GAAGN,0BAA0B,CAACO,IAA3B,CAAgC,UAACC,CAAD;IAAA,OAAOA,CAAC,CAACF,SAAF,KAAgB,IAAvB;EAAA,CAAhC,CAAlB;;EAEA,IAAIA,SAAJ,EAAe;IACb,oBAAO,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,SAAP;EACD;;EAEA,IAAMG,MAAM,GAAGT,0BAA0B,CAACC,GAA3B,CAA+B,UAACS,CAAD,EAAO;IACxD;IACK,OAAOA,CAAC,CAACC,IAAT;EAAe,CAFF,CAAf;;EAID,IAAMC,IAAI,GAAG,SAAPA,IAAO;IAAA,OAAM,IAAN;EAAA,CAAb;;EAEA,oBACE,QAAC,YAAD;IACE,KAAK,EAAC,wBADR;IAEE,MAAM,EAAEH,MAFV;IAGE,MAAM,EAAE,gBAACA,MAAD,EAAY;MAClB,oBACE;QAAA,uBACE,QAAC,oBAAD;UAAsB,MAAM,EAAEA;QAA9B;UAAA;UAAA;UAAA;QAAA;MADF,iBADF;IAKD;EATH;IAAA;IAAA;IAAA;EAAA,SADF;AAaD,CAtCD;;AAwCA,eAAeZ,wBAAf,C,CAEA;AAEA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}